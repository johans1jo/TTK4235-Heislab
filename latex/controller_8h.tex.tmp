\hypertarget{controller_8h}{}\section{source/controller.h File Reference}
\label{controller_8h}\index{source/controller.\+h@{source/controller.\+h}}


This library contains the logic that controls the elevator movements.  


{\ttfamily \#include \char`\"{}elev.\+h\char`\"{}}\\*
{\ttfamily \#include \char`\"{}timer.\+h\char`\"{}}\\*
{\ttfamily \#include \char`\"{}state\+\_\+machine.\+h\char`\"{}}\\*
Include dependency graph for controller.\+h\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \hyperlink{controller_8h_a1bf77763c29c4980d5f065904b985802}{delete\+\_\+order\+\_\+at\+\_\+floor} (int floor)
\begin{DoxyCompactList}\small\item\em Deletes all orders at a floor. \end{DoxyCompactList}\item 
int \hyperlink{controller_8h_a90469a19329d196c2fc0773e36221c32}{delete\+\_\+all\+\_\+orders} ()
\begin{DoxyCompactList}\small\item\em Deletes all orders at all floors. \end{DoxyCompactList}\item 
int \hyperlink{controller_8h_a091e5d1e93a7b6c1569ff194fdbcbacc}{update\+\_\+orders} ()
\begin{DoxyCompactList}\small\item\em Checking buttons\+: C\+O\+M\+M\+A\+ND, UP and D\+O\+WN and updates the ordes array. \end{DoxyCompactList}\item 
int \hyperlink{controller_8h_aacef2da44622fa8145be41c68a828909}{order\+\_\+at\+\_\+floor} (elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, elev\+\_\+motor\+\_\+direction\+\_\+t elev\+\_\+dir)
\begin{DoxyCompactList}\small\item\em Checking if there are orders at current floor and if the eleveator should stop. It also checks if the elevator is about to move bellow the bootom floor or above the top floor. \end{DoxyCompactList}\item 
int {\bfseries update\+\_\+elev\+\_\+postition} ()\hypertarget{controller_8h_a3812f07d41ab1b378bbcedfdd53a203c}{}\label{controller_8h_a3812f07d41ab1b378bbcedfdd53a203c}

\item 
int \hyperlink{controller_8h_aeb8f6df3064d502784865b6b8cb8eb6a}{order\+\_\+at\+\_\+current\+\_\+floor} (elev\+\_\+motor\+\_\+direction\+\_\+t elev\+\_\+dir, int e\+\_\+stopped, int current\+\_\+floor, int $\ast$dir\+\_\+switch)
\begin{DoxyCompactList}\small\item\em Used to check if the order is at the current floor so the elev can open the doors. It is also used to check if the elevator is actually at the floor it thinks it is after an emergency stop and if the elevator switched direction to get back to the floor it thinks it is at. \end{DoxyCompactList}\item 
int \hyperlink{controller_8h_a5735d97c09a80893f79ce6ce0fda1619}{orders\+\_\+bellow} (elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, int current\+\_\+floor)
\begin{DoxyCompactList}\small\item\em Checks if there are any orders of interest above current floor. \end{DoxyCompactList}\item 
int \hyperlink{controller_8h_abfa99631cbe31c4ae9bedeee58dae711}{orders\+\_\+above} (elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, int current\+\_\+floor)
\begin{DoxyCompactList}\small\item\em Checks if there are any orders of interest above current floor. \end{DoxyCompactList}\item 
int \hyperlink{controller_8h_ac7927046af7ea1e51c178ede55d39631}{e\+\_\+stop} (int $\ast$e\+\_\+stopped, elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$elev\+\_\+dir, elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, states\+\_\+t $\ast$elev\+\_\+state)
\begin{DoxyCompactList}\small\item\em Checking emergency stop and if an emergency stop has occured it deside if it\textquotesingle{}s going to open the door or just stand still. \end{DoxyCompactList}\item 
int \hyperlink{controller_8h_af4edcb71807d2f702bc77ea03fbee08e}{update\+\_\+lamps} ()
\begin{DoxyCompactList}\small\item\em Controll the lamps of whitch floor the elevator is or last was located in, floorpanel and elevatorepanel, but not the emergency lamp. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
This library contains the logic that controls the elevator movements. 



\subsection{Function Documentation}
\index{controller.\+h@{controller.\+h}!delete\+\_\+all\+\_\+orders@{delete\+\_\+all\+\_\+orders}}
\index{delete\+\_\+all\+\_\+orders@{delete\+\_\+all\+\_\+orders}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{delete\+\_\+all\+\_\+orders()}{delete_all_orders()}}]{\setlength{\rightskip}{0pt plus 5cm}int delete\+\_\+all\+\_\+orders (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_a90469a19329d196c2fc0773e36221c32}{}\label{controller_8h_a90469a19329d196c2fc0773e36221c32}


Deletes all orders at all floors. 

\begin{DoxyReturn}{Returns}
0 when done. 
\end{DoxyReturn}


Definition at line 23 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!delete\+\_\+order\+\_\+at\+\_\+floor@{delete\+\_\+order\+\_\+at\+\_\+floor}}
\index{delete\+\_\+order\+\_\+at\+\_\+floor@{delete\+\_\+order\+\_\+at\+\_\+floor}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{delete\+\_\+order\+\_\+at\+\_\+floor(int floor)}{delete_order_at_floor(int floor)}}]{\setlength{\rightskip}{0pt plus 5cm}int delete\+\_\+order\+\_\+at\+\_\+floor (
\begin{DoxyParamCaption}
\item[{int}]{floor}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_a1bf77763c29c4980d5f065904b985802}{}\label{controller_8h_a1bf77763c29c4980d5f065904b985802}


Deletes all orders at a floor. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em floor} & Where orderes wil be destructed.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
0 when done 
\end{DoxyReturn}


Definition at line 16 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!e\+\_\+stop@{e\+\_\+stop}}
\index{e\+\_\+stop@{e\+\_\+stop}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{e\+\_\+stop(int $\ast$e\+\_\+stopped, elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$elev\+\_\+dir, elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, states\+\_\+t $\ast$elev\+\_\+state)}{e_stop(int *e_stopped, elev_motor_direction_t *elev_dir, elev_motor_direction_t *priority_dir, states_t *elev_state)}}]{\setlength{\rightskip}{0pt plus 5cm}int e\+\_\+stop (
\begin{DoxyParamCaption}
\item[{int $\ast$}]{e\+\_\+stopped, }
\item[{elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$}]{elev\+\_\+dir, }
\item[{elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$}]{priority\+\_\+dir, }
\item[{states\+\_\+t $\ast$}]{elev\+\_\+state}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_ac7927046af7ea1e51c178ede55d39631}{}\label{controller_8h_ac7927046af7ea1e51c178ede55d39631}


Checking emergency stop and if an emergency stop has occured it deside if it\textquotesingle{}s going to open the door or just stand still. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em e\+\_\+stopped} & Takes in a 0 or not 0 integer to tell if an emergiency stop has occured. \\
\hline
\mbox{\tt in}  & {\em elev\+\_\+dir} & The elevation direction of movement. \\
\hline
\mbox{\tt in,out}  & {\em priority\+\_\+dir} & Orders in this direction are prioritized. \\
\hline
\mbox{\tt in,out}  & {\em elev\+\_\+state} & The state the elevator currently is given from the state machine.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
0 if the fuction does not take in a active emergency signal and therefore do nothing, 1 if it gets a stopsignal. 
\end{DoxyReturn}


Definition at line 188 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!order\+\_\+at\+\_\+current\+\_\+floor@{order\+\_\+at\+\_\+current\+\_\+floor}}
\index{order\+\_\+at\+\_\+current\+\_\+floor@{order\+\_\+at\+\_\+current\+\_\+floor}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{order\+\_\+at\+\_\+current\+\_\+floor(elev\+\_\+motor\+\_\+direction\+\_\+t elev\+\_\+dir, int e\+\_\+stopped, int current\+\_\+floor, int $\ast$dir\+\_\+switch)}{order_at_current_floor(elev_motor_direction_t elev_dir, int e_stopped, int current_floor, int *dir_switch)}}]{\setlength{\rightskip}{0pt plus 5cm}int order\+\_\+at\+\_\+current\+\_\+floor (
\begin{DoxyParamCaption}
\item[{elev\+\_\+motor\+\_\+direction\+\_\+t}]{elev\+\_\+dir, }
\item[{int}]{e\+\_\+stopped, }
\item[{int}]{current\+\_\+floor, }
\item[{int $\ast$}]{dir\+\_\+switch}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_aeb8f6df3064d502784865b6b8cb8eb6a}{}\label{controller_8h_aeb8f6df3064d502784865b6b8cb8eb6a}


Used to check if the order is at the current floor so the elev can open the doors. It is also used to check if the elevator is actually at the floor it thinks it is after an emergency stop and if the elevator switched direction to get back to the floor it thinks it is at. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em elev\+\_\+dir} & The elevators direction of movement. \\
\hline
\mbox{\tt in}  & {\em e\+\_\+stopped} & 0 or not 0 integer to tell if an emergency stop has occured. \\
\hline
\mbox{\tt in}  & {\em current\+\_\+floor} & The floor which the elevator last moved by. \\
\hline
\mbox{\tt in,out}  & {\em p\+\_\+dir\+\_\+switch} & A variable to tell if the elevator has switched direction after an emergency stop occured.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
2 or 3 if elev should move up, -\/2 or -\/3 if elev should move down, 1 if the doors should open or 0 if nothing should be done.
\end{DoxyReturn}
\begin{DoxyWarning}{Warning}
When called this function may change {\ttfamily p\+\_\+dir\+\_\+switch} and therfore the next call will give a diffrent result. 
\end{DoxyWarning}


Definition at line 99 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!order\+\_\+at\+\_\+floor@{order\+\_\+at\+\_\+floor}}
\index{order\+\_\+at\+\_\+floor@{order\+\_\+at\+\_\+floor}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{order\+\_\+at\+\_\+floor(elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, elev\+\_\+motor\+\_\+direction\+\_\+t elev\+\_\+dir)}{order_at_floor(elev_motor_direction_t *priority_dir, elev_motor_direction_t elev_dir)}}]{\setlength{\rightskip}{0pt plus 5cm}int order\+\_\+at\+\_\+floor (
\begin{DoxyParamCaption}
\item[{elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$}]{priority\+\_\+dir, }
\item[{elev\+\_\+motor\+\_\+direction\+\_\+t}]{elev\+\_\+dir}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_aacef2da44622fa8145be41c68a828909}{}\label{controller_8h_aacef2da44622fa8145be41c68a828909}


Checking if there are orders at current floor and if the eleveator should stop. It also checks if the elevator is about to move bellow the bootom floor or above the top floor. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in}  & {\em p\+\_\+priority\+\_\+dir} & Orders in this direction is prioritized. \\
\hline
\mbox{\tt in}  & {\em elev\+\_\+dir} & The elevators direction of movement.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
0 when done. 
\end{DoxyReturn}


Definition at line 66 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!orders\+\_\+above@{orders\+\_\+above}}
\index{orders\+\_\+above@{orders\+\_\+above}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{orders\+\_\+above(elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, int current\+\_\+floor)}{orders_above(elev_motor_direction_t *priority_dir, int current_floor)}}]{\setlength{\rightskip}{0pt plus 5cm}int orders\+\_\+above (
\begin{DoxyParamCaption}
\item[{elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$}]{priority\+\_\+dir, }
\item[{int}]{current\+\_\+floor}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_abfa99631cbe31c4ae9bedeee58dae711}{}\label{controller_8h_abfa99631cbe31c4ae9bedeee58dae711}


Checks if there are any orders of interest above current floor. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em p\+\_\+priority\+\_\+dir} & Orders in this direction is prioritized. If this equals D\+I\+R\+N\+\_\+\+S\+T\+OP this function may change it. \\
\hline
\mbox{\tt in}  & {\em current\+\_\+floor} & The floor which the elevator last moved by.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
1 if order of interest above, 0 if not. 
\end{DoxyReturn}


Definition at line 160 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!orders\+\_\+bellow@{orders\+\_\+bellow}}
\index{orders\+\_\+bellow@{orders\+\_\+bellow}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{orders\+\_\+bellow(elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$priority\+\_\+dir, int current\+\_\+floor)}{orders_bellow(elev_motor_direction_t *priority_dir, int current_floor)}}]{\setlength{\rightskip}{0pt plus 5cm}int orders\+\_\+bellow (
\begin{DoxyParamCaption}
\item[{elev\+\_\+motor\+\_\+direction\+\_\+t $\ast$}]{priority\+\_\+dir, }
\item[{int}]{current\+\_\+floor}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_a5735d97c09a80893f79ce6ce0fda1619}{}\label{controller_8h_a5735d97c09a80893f79ce6ce0fda1619}


Checks if there are any orders of interest above current floor. 


\begin{DoxyParams}[1]{Parameters}
\mbox{\tt in,out}  & {\em p\+\_\+priority\+\_\+dir} & Orders in this direction is prioritized. If this equals D\+I\+R\+N\+\_\+\+S\+T\+OP this function may change it. \\
\hline
\mbox{\tt in}  & {\em current\+\_\+floor} & The floor which the elevator last moved by.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
1 if order of interest bellow, 0 if not. 
\end{DoxyReturn}


Definition at line 132 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!update\+\_\+lamps@{update\+\_\+lamps}}
\index{update\+\_\+lamps@{update\+\_\+lamps}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{update\+\_\+lamps()}{update_lamps()}}]{\setlength{\rightskip}{0pt plus 5cm}int update\+\_\+lamps (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_af4edcb71807d2f702bc77ea03fbee08e}{}\label{controller_8h_af4edcb71807d2f702bc77ea03fbee08e}


Controll the lamps of whitch floor the elevator is or last was located in, floorpanel and elevatorepanel, but not the emergency lamp. 

\begin{DoxyReturn}{Returns}
0 when the function do it\textquotesingle{}s job and succeed. 
\end{DoxyReturn}


Definition at line 215 of file controller.\+c.

\index{controller.\+h@{controller.\+h}!update\+\_\+orders@{update\+\_\+orders}}
\index{update\+\_\+orders@{update\+\_\+orders}!controller.\+h@{controller.\+h}}
\subsubsection[{\texorpdfstring{update\+\_\+orders()}{update_orders()}}]{\setlength{\rightskip}{0pt plus 5cm}int update\+\_\+orders (
\begin{DoxyParamCaption}
{}
\end{DoxyParamCaption}
)}\hypertarget{controller_8h_a091e5d1e93a7b6c1569ff194fdbcbacc}{}\label{controller_8h_a091e5d1e93a7b6c1569ff194fdbcbacc}


Checking buttons\+: C\+O\+M\+M\+A\+ND, UP and D\+O\+WN and updates the ordes array. 

\begin{DoxyReturn}{Returns}
0 when done. 
\end{DoxyReturn}


Definition at line 30 of file controller.\+c.

